name: kubernetes

on:
  push:
    branches: [ kubernetes ]

env:
  GO111MODULE: on 
  PROJECT: kubernetes
  BRANCH: v1.20.14-es
  Dockerfile: Dockerfile-k8s

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
        - os: ubuntu-20.04
          archname: amd64
        - os: ubuntu-20.04
          archname: arm64
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M')"

    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
      id: go

    - name: Check out repo code
      uses: actions/checkout@v2

    - name: Check out build code
      uses: actions/checkout@v2
      with:
        repository: easystack/kubernetes
        ref: ${{ env.BRANCH }}
        token: ${{ secrets.KPULL }}  
        path: ${{ env.PROJECT }}

    - name: install arm tools
      if:  matrix.archname == 'arm64'
      run: |
        sudo apt-get update && sudo apt-get install -y crossbuild-essential-arm64
        
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build binary
      run: |
        export KUBE_GIT_COMMIT=""
        export KUBE_GIT_VERSION=${{ env.BRANCH }}
        export KUBE_BUILD_PLATFORMS=linux/${{ matrix.archname }}
        cd ${{ env.PROJECT }} 
        make kubelet kube-proxy kube-controller-manager kube-scheduler kube-apiserver kubectl

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Docker Buildx (push)
      run: |
        docker buildx build \
          --platform linux/${{ matrix.archname }} \
          --output "type=image,push=true" \
          --tag yylt/hyperkube-${{ matrix.archname }}:${{ env.BRANCH }}-${{ steps.date.outputs.date }} \
          --file ./${{ env.Dockerfile }} ./

