FROM centos:7

ARG BUILD_WARNINGS_AS_ERRORS=ON

ENV BUILD_DIR=build
ENV BUILD_DRIVER=OFF
ENV BUILD_BPF=OFF
ENV MAKE_JOBS=4
ENV FALCO_VERSION=0.29.1
ENV BUILD_TYPE="release"

# build toolchain
RUN yum -y install centos-release-scl && \
    INSTALL_PKGS="gnupg2 flex elfutils-libelf-devel xz glibc-devel lua-devel gcc gcc-c++ kernel-devel make devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-toolchain devtoolset-7-libstdc++-devel devtoolset-7-elfutils-libelf-devel llvm-toolset-7.0 glibc-static autoconf automake libtool createrepo expect git which libcurl-devel zlib-devel rpm-build libyaml-devel" && \
    yum -y install --setopt=tsflags=nodocs $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS

ARG CMAKE_VERSION=3.6.3
RUN source scl_source enable devtoolset-7 llvm-toolset-7.0 && \
    cd /tmp && \
    curl -L https://github.com/kitware/cmake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz | tar xz && \
    cd cmake-${CMAKE_VERSION} && \
    ./bootstrap --system-curl && \
    make -j${MAKE_JOBS} && \
    make install && \
    rm -rf /tmp/cmake-${CMAKE_VERSION} && \
    cd /tmp && \
    curl -L https://github.com/falcosecurity/falco/archive/refs/tags/${FALCO_VERSION}.tar.gz | tar xz  && \
    cd falco-${FALCO_VERSION} && \
    mkdir -p "$BUILD_DIR" && \
    cd "$BUILD_DIR" && \
    cmake \
    -DCMAKE_BUILD_TYPE="$BUILD_TYPE" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DBUILD_DRIVER="$BUILD_DRIVER" \
    -DBUILD_BPF="$BUILD_BPF" \
    -DBUILD_WARNINGS_AS_ERRORS="$BUILD_WARNINGS_AS_ERRORS" \
    -DFALCO_VERSION="$FALCO_VERSION" \
    -DDRAIOS_DEBUG_FLAGS="$DRAIOS_DEBUG_FLAGS" \
    -DUSE_BUNDLED_DEPS=ON \
    ".." && \
    sed -i 's/v1.2.1/v1.4.1/g' falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs/cmake/modules/b64.cmake && \
    sed -i 's/d620e7caf3ed5f9c28d727fa799918ad3ef69c80975905646bb549a6019cdcbd/0fa93fb9c4fb72cac5a21533e6d611521e4326f42c19cc23f8ded814b0eca071/g' falcosecurity-libs-repo/falcosecurity-libs-prefix/src/falcosecurity-libs/cmake/modules/b64.cmake && \
    make falco && make install && \
    rm /tmp/*
